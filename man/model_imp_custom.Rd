% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/model_imp_custom.R
\name{model_imp_custom}
\alias{model_imp_custom}
\title{Model set-up
Code is modified from JointAI to allow for additional control to imputation models}
\arguments{
\item{formula}{a two sided model formula (see \code{\link[stats]{formula}})
or a list of such formulas; (more details below).}

\item{fixed}{a two sided formula describing the fixed-effects part of the
model (see \code{\link[stats]{formula}})}

\item{random}{only for multi-level models:
a one-sided formula of the form \code{~x1 + ... + xn | g},
where \code{x1 + ... + xn} specifies the model for the random
effects and \code{g} the grouping variable}

\item{data}{a \code{data.frame} containing the original data
(more details below)}

\item{family}{only for \code{glm_imp} and \code{glmm_imp}/\code{glmer_imp}:
a description of the distribution and link function to
be used in the model. This can be a character string naming a
family function, a family function or the result of a call to
a family function. (For more details see below and
\code{\link[stats]{family}}.)}

\item{rd_vcov}{character string or list specifying the structure of the
random effects variance covariance matrix, see details below.}

\item{monitor_params}{named list or vector specifying which parameters
should be monitored (more details below)}

\item{inits}{optional; specification of initial values in the form of a list
or a function (see \code{\link[rjags]{jags.model}}).
If omitted, starting values for the random number generator are
created by \strong{JointAI}, initial values are then generated
by JAGS.
It is an error to supply an initial value for an observed node.}

\item{auxvars}{optional; one-sided formula of variables that should be used
as predictors in the imputation procedure (and will be imputed
if necessary) but are not part of the analysis model(s).
For more details with regards to the behaviour with
non-linear effects see the vignette.}

\item{models}{optional; named vector specifying the types of models for
(incomplete) covariates.
This arguments replaces the argument \code{meth} used in
earlier versions.
If \code{NULL} (default) models will be determined
automatically based on the class of the respective columns of
\code{data}.}

\item{refcats}{optional; either one of \code{"first"}, \code{"last"},
\code{"largest"} (which sets the category for all categorical
variables) or a named list specifying which category should
be used as reference category per categorical variable.
Options are the category label, the category number,
or one of "first" (the first category),
"last" (the last category) or "largest" (chooses the category
with the most observations).
Default is "first". If reference categories are specified for
a subset of the categorical variables the default will be
used for the remaining variables.
(See also \code{\link{set_refcat}})}

\item{shrinkage}{optional; either a character string naming the shrinkage
method to be used for regression coefficients in all models
or a named vector specifying the type of shrinkage to be
used in the models given as names.}

\item{rev}{optional character vector; vector of ordinal outcome variable
names for which the odds should be reversed, i.e.,
\eqn{logit(y\le k)} instead of \eqn{logit(y > k)}.}

\item{nonprop}{optional named list of one-sided formulas specifying
covariates that have non-proportional effects in cumulative
logit models. These covariates should also be part of the
regular model formula, and the names of the list should be
the names of the ordinal response variables.}

\item{...}{additional, optional arguments
\describe{
\item{\code{trunc}}{named list specifying limits of truncation for the
distribution of the named incomplete variables (see vignette)}
\item{\code{hyperpars}}{list of hyper-parameters, as obtained by
\code{\link{default_hyperpars}()}}
\item{\code{scale_vars}}{named vector of (continuous) variables that
will be centred and scaled (such that mean = 0 and sd = 1)
when they enter a linear predictor to improve
convergence of the MCMC sampling. Default is that all
numeric variables and integer variables with >20 different
values will be scaled.
If set to \code{FALSE} no scaling will be done.}
\item{\code{custom}}{named list of JAGS model chunks (character strings)
that replace the model for the given variable.}
\item{\code{append_data_list}}{list that will be appended to the list
containing the data that is passed to \strong{rjags}
(\code{data_list}). This may be necessary if additional data /
variables are needed for custom (covariate) models.}
\item{\code{progress.bar}}{character string specifying the type of
progress bar. Possible values are "text" (default), "gui",
and "none" (see \code{\link[rjags]{update}}). Note: when
sampling is performed in parallel it is not possible to
display a progress bar.}
\item{\code{quiet}}{logical; if \code{TRUE} then messages generated by
\strong{rjags} during compilation as well as the progress bar
for the adaptive phase will be suppressed,
(see \code{\link[rjags]{jags.model}})}
\item{\code{keep_scaled_mcmc}}{should the "original" MCMC sample (i.e.,
the scaled version returned by \code{coda.samples()}) be
kept? (The MCMC sample that is re-scaled to the scale of the
data is always kept.)}
\item{\code{modelname}}{character string specifying the name of the
model file (including the ending, either .R or .txt). If
unspecified a random name will be generated.}
\item{\code{modeldir}}{directory containing the model file or directory
in which the model file should be written. If unspecified a
temporary directory will be created.}
\item{\code{overwrite}}{logical; whether an existing model file with
the specified \code{<modeldir>/<modelname>} should be
overwritten. If set to \code{FALSE} and a model already
exists, that model will be used. If unspecified (\code{NULL})
and a file exists, the user is asked for input on how to
proceed.}
\item{\code{keep_model}}{logical; whether the created JAGS model file
should be saved or removed from (\code{FALSE}; default) when
the sampling has finished.}
}}
}
\description{
Model set-up
Code is modified from JointAI to allow for additional control to imputation models
}
\section{The modification is to allow user-specified order on the sequence}{
of imputation models.

default Sequence of models:
Models generated automatically (i.e., not mentioned in \code{formula} or \code{fixed}
are specified in a sequence based on the level of the outcome of the
respective model in the multi-level hierarchy and within each level
according to the number of missing values.

After the modification, users can specify the order through \code{model_order}.

the following scenario gives the sequential imputation models in an order of
y0, y1, y3, y2, y4,..., which is based on 'nmis' variable. The expected order
would be y0, y1, y2, y3, y4,.... To specify the order, what we need is just set
model_order = c('y0', 'y1', 'y2', 'y3', 'y4', 'y5')
}

