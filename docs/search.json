[{"path":[]},{"path":"/authors.html","id":null,"dir":"","previous_headings":"","what":"Authors","title":"Authors and Citation","text":"Ying Liu. Author. Tony Wang. Author, maintainer.","code":""},{"path":"/authors.html","id":"citation","dir":"","previous_headings":"","what":"Citation","title":"Authors and Citation","text":"Liu Y, Wang T (2022). remiod: Reference-Based Multiple Imputation Ordinal/Binary Response. R package version 1.0.0.","code":"@Manual{,   title = {remiod: Reference-Based Multiple Imputation for Ordinal/Binary Response},   author = {Ying Liu and Tony Wang},   year = {2022},   note = {R package version 1.0.0}, }"},{"path":"/reference/clm_MI_CR.html","id":null,"dir":"Reference","previous_headings":"","what":"Apply Copy-Reference(CR) Method to Update JAGS MCMC outputs under MAR for Cumulative Logistic Model — clm_MI_CR","title":"Apply Copy-Reference(CR) Method to Update JAGS MCMC outputs under MAR for Cumulative Logistic Model — clm_MI_CR","text":"Internal function obtain Copy-Reference(CR) MCMC MAR object.","code":""},{"path":"/reference/clm_MI_CR.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Apply Copy-Reference(CR) Method to Update JAGS MCMC outputs under MAR for Cumulative Logistic Model — clm_MI_CR","text":"","code":"clm_MI_CR(object, treatment, start = NULL, end = NULL, thin = NULL,   exclude_chains = NULL, subset = FALSE, seed = NULL, mess = FALSE,   ...)"},{"path":"/reference/clm_MI_CR.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Apply Copy-Reference(CR) Method to Update JAGS MCMC outputs under MAR for Cumulative Logistic Model — clm_MI_CR","text":"object object class remoid treatment variable name treatment. Reference level treatment coded 0. start first iteration used. end last iteration used. thin thinning applied. exclude_chains optional vector numbers, indexing MCMC chains excluded output. subset subset parameters (columns mcmc object) used. seed optional seed value. mess logical, messages displayed? ... optional arguments pass main function.","code":""},{"path":"/reference/clm_MI_CR.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Apply Copy-Reference(CR) Method to Update JAGS MCMC outputs under MAR for Cumulative Logistic Model — clm_MI_CR","text":"matrix MCMC samples monitored parameters.subset MCMC sample can selected using start, end thin.","code":""},{"path":"/reference/clm_MI_delta.html","id":null,"dir":"Reference","previous_headings":"","what":"Apply Delta adjustment to Update JAGS MCMC outputs under MAR for Cumulative Logistic Model — clm_MI_delta","title":"Apply Delta adjustment to Update JAGS MCMC outputs under MAR for Cumulative Logistic Model — clm_MI_delta","text":"Internal function obtain delta-adjusted MCMC MAR object.","code":""},{"path":"/reference/clm_MI_delta.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Apply Delta adjustment to Update JAGS MCMC outputs under MAR for Cumulative Logistic Model — clm_MI_delta","text":"","code":"clm_MI_delta(object, treatment, delta = 0, start = NULL, end = NULL,   thin = NULL, exclude_chains = NULL, subset = FALSE, seed = NULL,   mess = FALSE, ...)"},{"path":"/reference/clm_MI_delta.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Apply Delta adjustment to Update JAGS MCMC outputs under MAR for Cumulative Logistic Model — clm_MI_delta","text":"object object class remiod treatment variable name treatment. Reference level treatment coded 0. delta specific value used Delta adjustment, applicable method=\"delta\". start first iteration used. end last iteration used. thin thinning applied. exclude_chains optional vector numbers, indexing MCMC chains excluded output. subset subset parameters (columns mcmc object) used. seed optional seed value. mess logical, messages displayed? ... optional arguments pass main function.","code":""},{"path":"/reference/clm_MI_delta.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Apply Delta adjustment to Update JAGS MCMC outputs under MAR for Cumulative Logistic Model — clm_MI_delta","text":"matrix MCMC samples monitored parameters.subset MCMC sample can selected using start, end thin.","code":""},{"path":"/reference/clm_MI_J2R.html","id":null,"dir":"Reference","previous_headings":"","what":"Apply Jump-to-Reference(J2R) Method to Update JAGS MCMC outputs under MAR for Cumulative Logistic Model — clm_MI_J2R","title":"Apply Jump-to-Reference(J2R) Method to Update JAGS MCMC outputs under MAR for Cumulative Logistic Model — clm_MI_J2R","text":"Internal function obtain Jump--Reference(J2R) MCMC MAR object.","code":""},{"path":"/reference/clm_MI_J2R.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Apply Jump-to-Reference(J2R) Method to Update JAGS MCMC outputs under MAR for Cumulative Logistic Model — clm_MI_J2R","text":"","code":"clm_MI_J2R(object, treatment, start = NULL, end = NULL, thin = NULL,   exclude_chains = NULL, subset = FALSE, seed = NULL, mess = FALSE,   ...)"},{"path":"/reference/clm_MI_J2R.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Apply Jump-to-Reference(J2R) Method to Update JAGS MCMC outputs under MAR for Cumulative Logistic Model — clm_MI_J2R","text":"object object class remiod treatment variable name treatment. Reference level treatment coded 0. start first iteration used. end last iteration used. thin thinning applied. exclude_chains optional vector numbers, indexing MCMC chains excluded output. subset subset parameters (columns mcmc object) used. seed optional seed value. mess logical, messages displayed? ... optional arguments pass main function.","code":""},{"path":"/reference/clm_MI_J2R.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Apply Jump-to-Reference(J2R) Method to Update JAGS MCMC outputs under MAR for Cumulative Logistic Model — clm_MI_J2R","text":"matrix MCMC samples monitored parameters .subset MCMC sample can selected using start, end thin.","code":""},{"path":"/reference/commParams.html","id":null,"dir":"Reference","previous_headings":"","what":"Common Parameters used by functions of remiod — commParams","title":"Common Parameters used by functions of remiod — commParams","text":"Common Parameters used functions remiod","code":""},{"path":"/reference/commParams.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Common Parameters used by functions of remiod — commParams","text":"object object inheriting class 'remoid' trtvar name treatment variable. necessary, reference category, .e. control arm, can set refcats argument. method method obtaining multiple-imputed dataset. Options include MAR, J2R, CR, delta adjustment. Default MAR. delta specific value used Delta adjustment, applicable method=\"delta\". algorithm either algorithm tang_seq proposed Tang (2018) jags original method inherited JAGS (Plummer 2003). model_order optional. manually specify order imputation models. ord_cov_dummy optional. specify whether ordinal variables treated categorical variables continuous variables included covariates sequential imputation models. Default TRUE, dummy variables created accordingly. rinv small number used adjusting Fish information matrix scheme scheme distribution used proposing coefficients imputation models. scheme=1: beta ~ N( mean + inv()*score, inv()); scheme=2: beta ~ N( mean , inv()). subset subset parameters/variables/nodes (columns MCMC sample). Follows principle argument monitor_params *_imp. exclude_chains optional vector index numbers chains excluded start first iteration interest (see window.mcmc) end last iteration interest (see window.mcmc) progress.bar character string specifying type progress bar. Possible values \"text\" (default), \"gui\", \"none\" (see update). Note: sampling performed parallel possible display progress bar. seed optional; seed value (reproducibility) include logical, TRUE, raw data included imputed data sets imputation ID = 0. mi.setting list arguments related multiple imputation, including trtvar, algorithm, method, include, exclude_chains, thin, start, end, seed.","code":""},{"path":"/reference/extract_MIdata.html","id":null,"dir":"Reference","previous_headings":"","what":"Extract a specified number of multiple imputed datasets — extract_MIdata","title":"Extract a specified number of multiple imputed datasets — extract_MIdata","text":"Extract specified number multiple imputed datasets","code":""},{"path":"/reference/extract_MIdata.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Extract a specified number of multiple imputed datasets — extract_MIdata","text":"","code":"extract_MIdata(object, method = c(\"MAR\", \"J2R\", \"CR\", \"delta\"), delta = 0,   mi.setting = NULL, M = 10, minspace = 2, mess = FALSE)"},{"path":"/reference/extract_MIdata.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Extract a specified number of multiple imputed datasets — extract_MIdata","text":"object object inheriting class 'remoid' method method obtaining multiple-imputed dataset. Options include MAR, J2R, CR, delta adjustment. Default MAR. delta specific value used Delta adjustment, applicable method=\"delta\". mi.setting list arguments related multiple imputation, including trtvar, algorithm, method, include, exclude_chains, thin, start, end, seed. M number imputed datasets minspace minimum number iterations iterations chosen imputed values (prevent strong correlation imputed datasets case high autocorrelation MCMC chains). mess logical; messages given? Default TRUE.","code":""},{"path":"/reference/extract_MIdata.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Extract a specified number of multiple imputed datasets — extract_MIdata","text":"data.frame imputed datasets stacked onto .","code":""},{"path":"/reference/extract_MIdata.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Extract a specified number of multiple imputed datasets — extract_MIdata","text":"","code":"# \\donttest{ # data(schizow)  test = remiod(formula = y6 ~ tx + y0 + y1 + y3, data = schizow,               trtvar = 'tx', algorithm = 'jags', method=\"MAR\",               ord_cov_dummy = FALSE, n.adapt = 10, n.chains = 1,               n.iter = 100, thin = 2, warn = FALSE, seed = 1234) #> NOTE: Stopping adaptation #>  #>   extdt = extract_MIdata(object=test, method=\"J2R\",mi.setting=NULL, M=10, minspace=2)  # }"},{"path":"/reference/get_class.html","id":null,"dir":"Reference","previous_headings":"","what":"Obtain ordinal results based on log-odds (eta) and cut-offs (gamma) from MCMC\r\nInternal function to obtain ordinal results based on log-odds (eta) and cut-offs (gamma) from MCMC. — get_class","title":"Obtain ordinal results based on log-odds (eta) and cut-offs (gamma) from MCMC\r\nInternal function to obtain ordinal results based on log-odds (eta) and cut-offs (gamma) from MCMC. — get_class","text":"Obtain ordinal results based log-odds (eta) cut-offs (gamma) MCMC Internal function obtain ordinal results based log-odds (eta) cut-offs (gamma) MCMC.","code":""},{"path":"/reference/get_class.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Obtain ordinal results based on log-odds (eta) and cut-offs (gamma) from MCMC\r\nInternal function to obtain ordinal results based on log-odds (eta) and cut-offs (gamma) from MCMC. — get_class","text":"","code":"get_class(MCMC, impvar, eta_name, rev = FALSE, seed = NULL)"},{"path":"/reference/get_class.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Obtain ordinal results based on log-odds (eta) and cut-offs (gamma) from MCMC\r\nInternal function to obtain ordinal results based on log-odds (eta) and cut-offs (gamma) from MCMC. — get_class","text":"MCMC matrix MCMC samples. impvar name imputation variable. eta_name name eta mcmc samples rev logical. Reverse order . seed optional. seed value randomness.","code":""},{"path":"/reference/get_MI_RB.html","id":null,"dir":"Reference","previous_headings":"","what":"Create multiple imputed datasets based on assigned imputation method. — get_MI_RB","title":"Create multiple imputed datasets based on assigned imputation method. — get_MI_RB","text":"Internal function, creates multiple imputed datasets based assigned imputation method returns multiple imputed datasets stacked onto (.e., long format; optionally including original, incomplete data).","code":""},{"path":"/reference/get_MI_RB.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create multiple imputed datasets based on assigned imputation method. — get_MI_RB","text":"","code":"get_MI_RB(object, treatment, method = c(\"MAR\", \"J2R\", \"CR\", \"delta\"),   delta = 0, exclude_chains = NULL, start = NULL, end = NULL,   seed = NULL, thin = NULL, subset = FALSE, include = TRUE,   mess = TRUE, ...)"},{"path":"/reference/get_MI_RB.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Create multiple imputed datasets based on assigned imputation method. — get_MI_RB","text":"object object class JointAI treatment variable name treatment. Reference level treatment coded 0. method method obtaining multiple-imputed dataset. Options include MAR, J2R, CR, Delta adjustment. delta specific value used Delta adjustment, applicable method=\"delta\". exclude_chains optional vector numbers, indexing MCMC chains excluded output. start first iteration used. end last iteration used. seed optional seed value. thin thinning applied. subset subset parameters (columns mcmc object) used. include original, incomplete data included? Default TRUE. mess logical, messages displayed? ... optional arguments pass main function.","code":""},{"path":"/reference/get_MI_RB.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Create multiple imputed datasets based on assigned imputation method. — get_MI_RB","text":"data.frame original data (include = TRUE) imputed datasets stacked onto .variable Imputation_ indexes imputation, .rownr links rows rows original data. cross-sectional datasets variable .id added subject identifier.","code":""},{"path":"/reference/get_Mlist.html","id":null,"dir":"Reference","previous_headings":"","what":"Re-create the full Mlist from a ","title":"Re-create the full Mlist from a ","text":"Re-create full Mlist \"JointAI\" object","code":""},{"path":"/reference/get_Mlist.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Re-create the full Mlist from a ","text":"","code":"get_Mlist(object)"},{"path":"/reference/get_Mlist.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Re-create the full Mlist from a ","text":"object object class \"JointAI\"","code":""},{"path":"/reference/glm_MI_CR.html","id":null,"dir":"Reference","previous_headings":"","what":"Apply Copy-Reference(CR) Method to Update JAGS MCMC outputs under MAR for Generalized Linear Model — glm_MI_CR","title":"Apply Copy-Reference(CR) Method to Update JAGS MCMC outputs under MAR for Generalized Linear Model — glm_MI_CR","text":"Internal function obtain Copy-Reference(CR) MCMC MAR object.","code":""},{"path":"/reference/glm_MI_CR.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Apply Copy-Reference(CR) Method to Update JAGS MCMC outputs under MAR for Generalized Linear Model — glm_MI_CR","text":"","code":"glm_MI_CR(object, treatment, start = NULL, end = NULL, thin = NULL,   exclude_chains = NULL, subset = FALSE, seed = 5432, mess = FALSE,   ...)"},{"path":"/reference/glm_MI_CR.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Apply Copy-Reference(CR) Method to Update JAGS MCMC outputs under MAR for Generalized Linear Model — glm_MI_CR","text":"object object class remiod treatment variable name treatment. Reference level treatment coded 0. start first iteration used end last iteration used thin thinning applied exclude_chains optional vector numbers, indexing MCMC chains excluded output subset subset parameters (columns mcmc object) used seed optional seed value. mess logical, messages displayed? ... optional arguments pass main function.","code":""},{"path":"/reference/glm_MI_CR.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Apply Copy-Reference(CR) Method to Update JAGS MCMC outputs under MAR for Generalized Linear Model — glm_MI_CR","text":"matrix MCMC samples monitored parameters.subset MCMC sample can selected using start, end thin.","code":""},{"path":"/reference/glm_MI_delta.html","id":null,"dir":"Reference","previous_headings":"","what":"Apply Delta adjustment to Update JAGS MCMC outputs under MAR for Generalized Linear Model — glm_MI_delta","title":"Apply Delta adjustment to Update JAGS MCMC outputs under MAR for Generalized Linear Model — glm_MI_delta","text":"Internal function obtain delta-adjusted MCMC MAR object.","code":""},{"path":"/reference/glm_MI_delta.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Apply Delta adjustment to Update JAGS MCMC outputs under MAR for Generalized Linear Model — glm_MI_delta","text":"","code":"glm_MI_delta(object, treatment, delta = 0, start = NULL, end = NULL,   thin = NULL, exclude_chains = NULL, subset = FALSE, seed = 5432,   mess = FALSE, ...)"},{"path":"/reference/glm_MI_delta.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Apply Delta adjustment to Update JAGS MCMC outputs under MAR for Generalized Linear Model — glm_MI_delta","text":"object object class remiod treatment variable name treatment. Reference level treatment coded 0. delta specific value used Delta adjustment, applicable method=\"delta\". start first iteration used end last iteration used thin thinning applied exclude_chains optional vector numbers, indexing MCMC chains excluded output subset subset parameters (columns mcmc object) used seed optional seed value. mess logical, messages displayed? ... optional arguments pass main function.","code":""},{"path":"/reference/glm_MI_delta.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Apply Delta adjustment to Update JAGS MCMC outputs under MAR for Generalized Linear Model — glm_MI_delta","text":"matrix MCMC samples monitored parameters.subset MCMC sample can selected using start, end thin.","code":""},{"path":"/reference/glm_MI_J2R.html","id":null,"dir":"Reference","previous_headings":"","what":"Apply Jump-to-Reference(J2R) Method to Update JAGS MCMC outputs under MAR for Generalized Linear Model — glm_MI_J2R","title":"Apply Jump-to-Reference(J2R) Method to Update JAGS MCMC outputs under MAR for Generalized Linear Model — glm_MI_J2R","text":"Internal function obtain Jump--Reference(J2R) MCMC MAR object.","code":""},{"path":"/reference/glm_MI_J2R.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Apply Jump-to-Reference(J2R) Method to Update JAGS MCMC outputs under MAR for Generalized Linear Model — glm_MI_J2R","text":"","code":"glm_MI_J2R(object, treatment, start = NULL, end = NULL, thin = NULL,   exclude_chains = NULL, subset = FALSE, seed = 5432, mess = FALSE,   ...)"},{"path":"/reference/glm_MI_J2R.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Apply Jump-to-Reference(J2R) Method to Update JAGS MCMC outputs under MAR for Generalized Linear Model — glm_MI_J2R","text":"object object class remiod treatment variable name treatment. Reference level treatment coded 0. start first iteration used end last iteration used thin thinning applied exclude_chains optional vector numbers, indexing MCMC chains excluded output subset subset parameters (columns mcmc object) used seed optional seed value. mess logical, messages displayed? ... optional arguments pass main function.","code":""},{"path":"/reference/glm_MI_J2R.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Apply Jump-to-Reference(J2R) Method to Update JAGS MCMC outputs under MAR for Generalized Linear Model — glm_MI_J2R","text":"matrix MCMC samples monitored parameters.subset MCMC sample can selected using start, end thin.","code":""},{"path":"/reference/list.models.html","id":null,"dir":"Reference","previous_headings":"","what":"Listing the sequence of models used for imputation — list.models","title":"Listing the sequence of models used for imputation — list.models","text":"Listing sequence models used imputation","code":""},{"path":"/reference/list.models.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Listing the sequence of models used for imputation — list.models","text":"","code":"list.models(object, details = FALSE, print = TRUE)"},{"path":"/reference/list.models.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Listing the sequence of models used for imputation — list.models","text":"object object class remiod details logical. Default FALSE, listing models formula format. TRUE, details models presented. print logical. Default TRUE print imputation models detailed imputation models.","code":""},{"path":"/reference/mcmcplot.html","id":null,"dir":"Reference","previous_headings":"","what":"Visualizing the posterior sample\r\nCreates a set of plots for visually evaluating convergence and mixing of the chains\r\nfrom the MCMC sample of an object of class 'remiod'. — mcmcplot","title":"Visualizing the posterior sample\r\nCreates a set of plots for visually evaluating convergence and mixing of the chains\r\nfrom the MCMC sample of an object of class 'remiod'. — mcmcplot","text":"Visualizing posterior sample Creates set plots visually evaluating convergence mixing chains MCMC sample object class 'remiod'.","code":""},{"path":"/reference/mcmcplot.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Visualizing the posterior sample\r\nCreates a set of plots for visually evaluating convergence and mixing of the chains\r\nfrom the MCMC sample of an object of class 'remiod'. — mcmcplot","text":"","code":"mcmcplot(object, what = c(\"trace\", \"density\"), subset = c(analysis_main =   TRUE), outcome = NULL, mi.setting = NULL, nrow = NULL, ncol = NULL,   use_ggplot = TRUE, mess = TRUE, warn = FALSE, ...)"},{"path":"/reference/mcmcplot.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Visualizing the posterior sample\r\nCreates a set of plots for visually evaluating convergence and mixing of the chains\r\nfrom the MCMC sample of an object of class 'remiod'. — mcmcplot","text":"object object inheriting class 'remoid' select either trace density plots MCMC samples subset subset parameters/variables/nodes (columns MCMC sample). Follows principle argument monitor_params *_imp. outcome optional; vector identifying subset sub-models included output, either specifying indices (using order used list model formulas), names (LHS respective model formula character string) mi.setting list arguments extracting MI data set, used update one remoid object. Default NULL, meaning update mi.setting remoid object. nrow optional; number rows plot layout; automatically chosen unspecified ncol optional; number columns plot layout; automatically chosen unspecified use_ggplot logical; ggplot used instead base graphics? mess logical; messages given? Default TRUE. warn logical; warnings given? Default TRUE. ... Arguments passed graphics::matplot lty vector line types, widths, end styles.     first element first column, second element     second column, etc., even lines plotted     columns. Line types used cyclically plots     drawn. lwd vector line types, widths, end styles.     first element first column, second element     second column, etc., even lines plotted     columns. Line types used cyclically plots     drawn. lend vector line types, widths, end styles.     first element first column, second element     second column, etc., even lines plotted     columns. Line types used cyclically plots     drawn. col vector colors.  Colors used cyclically. cex vector character expansion sizes, used cyclically.     works multiple par(\"cex\").  NULL     equivalent 1.0. bg vector background (fill) colors open plot     symbols given pch = 21:25 points.      default NA corresponds one underlying function     plot.xy. add logical.  TRUE, plots added current one,     using points lines. verbose logical.  TRUE, write one line     done.","code":""},{"path":"/reference/prep_MCMC.html","id":null,"dir":"Reference","previous_headings":"","what":"Extract MCMC samples of monitored parameters from JointAI object. Code from JointAI. — prep_MCMC","title":"Extract MCMC samples of monitored parameters from JointAI object. Code from JointAI. — prep_MCMC","text":"Extract MCMC samples monitored parameters JointAI object. Code JointAI.","code":""},{"path":"/reference/prep_MCMC.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Extract MCMC samples of monitored parameters from JointAI object. Code from JointAI. — prep_MCMC","text":"","code":"prep_MCMC(object, treatment = NULL, delta = 0, start = NULL,   end = NULL, thin = NULL, subset = FALSE, exclude_chains = NULL,   warn = TRUE, mess = TRUE, ...)"},{"path":"/reference/prep_MCMC.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Extract MCMC samples of monitored parameters from JointAI object. Code from JointAI. — prep_MCMC","text":"object object class JointAI treatment variable name treatment. Reference level treatment coded 0. delta specific value used Delta adjustment, applicable method=\"delta\". start first iteration used end last iteration used thin thinning applied subset subset parameters (columns mcmc object) used exclude_chains optional vector numbers, indexing MCMC chains warn logical, warning messages displayed? mess logical, messages displayed? ... optional arguments passed remiod.","code":""},{"path":"/reference/remiod.html","id":null,"dir":"Reference","previous_headings":"","what":"Reference-Based Multiple Imputation for Ordinal/Binary Response — remiod","title":"Reference-Based Multiple Imputation for Ordinal/Binary Response — remiod","text":"Reference-Based Multiple Imputation Ordinal/Binary Response","code":""},{"path":"/reference/remiod.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Reference-Based Multiple Imputation for Ordinal/Binary Response — remiod","text":"","code":"remiod(formula, data, trtvar, refcats = NULL, family = NULL,   method = \"MAR\", delta = 0, algorithm = c(\"tang_seq\", \"jags\"),   rinv = 1e-04, scheme = 2, model_order = NULL, models = NULL,   ord_cov_dummy = TRUE, n.chains = 2, n.adapt = 100, n.iter = 1000,   thin = 2, start = NULL, end = NULL, seed = 1234,   exclude_chains = NULL, subset = NULL, include = FALSE, mess = TRUE,   warn = FALSE, progress.bar = TRUE, ...)"},{"path":"/reference/remiod.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Reference-Based Multiple Imputation for Ordinal/Binary Response — remiod","text":"formula two sided model formula (see formula) list formulas; (details ). data data.frame containing original data (details ) trtvar name treatment variable. necessary, reference category, .e. control arm, can set refcats argument. refcats optional; either one \"first\", \"last\", \"largest\" (sets category categorical variables) named list specifying category used reference category per categorical variable. Options category label, category number, one \"first\" (first category), \"last\" (last category) \"largest\" (chooses category observations). Default \"first\". reference categories specified subset categorical variables default used remaining variables. (See also set_refcat) family glm_imp glmm_imp/glmer_imp: description distribution link function used model. can character string naming family function, family function result call family function. (details see family.) method method obtaining multiple-imputed dataset. Options include MAR, J2R, CR, delta adjustment. Default MAR. delta specific value used Delta adjustment, applicable method=\"delta\". algorithm either algorithm tang_seq proposed Tang (2018) jags original method inherited JAGS (Plummer 2003). rinv small number used adjusting Fish information matrix scheme scheme distribution used proposing coefficients imputation models. scheme=1: beta ~ N( mean + inv()*score, inv()); scheme=2: beta ~ N( mean , inv()). model_order optional. manually specify order imputation models. models optional; named vector specifying types models (incomplete) covariates. arguments replaces argument meth used earlier versions. NULL (default) models determined automatically based class respective columns data. ord_cov_dummy optional. specify whether ordinal variables treated categorical variables continuous variables included covariates sequential imputation models. Default TRUE, dummy variables created accordingly. n.chains number MCMC chains n.adapt number iterations adaptation MCMC samplers (see adapt) n.iter number iterations MCMC chain (adaptation; see coda.samples) thin thinning interval (integer; see window.mcmc). example, thin = 1 (default) keep MCMC samples iterations; thin = 5 keep every 5th iteration. start first iteration interest (see window.mcmc) end last iteration interest (see window.mcmc) seed optional; seed value (reproducibility) exclude_chains optional vector index numbers chains excluded subset subset parameters/variables/nodes (columns MCMC sample). Follows principle argument monitor_params *_imp. include logical, TRUE, raw data included imputed data sets imputation ID = 0. mess logical; messages given? Default TRUE. warn logical; warnings given? Default TRUE. progress.bar character string specifying type progress bar. Possible values \"text\" (default), \"gui\", \"none\" (see update). Note: sampling performed parallel possible display progress bar. ... additional, optional arguments trunc named list specifying limits truncation distribution named incomplete variables (see vignette ModelSpecification) hyperpars list hyper-parameters, obtained default_hyperpars() scale_vars named vector (continuous) variables centred scaled (mean = 0 sd = 1) enter linear predictor improve convergence MCMC sampling. Default numeric variables integer variables >20 different values scaled. set FALSE scaling done. custom named list JAGS model chunks (character strings) replace model given variable. append_data_list list appended list containing data passed rjags (data_list). may necessary additional data / variables needed custom (covariate) models. progress.bar character string specifying type progress bar. Possible values \"text\" (default), \"gui\", \"none\" (see update). Note: sampling performed parallel possible display progress bar. quiet logical; TRUE messages generated rjags compilation well progress bar adaptive phase suppressed, (see jags.model) keep_scaled_mcmc \"original\" MCMC sample (.e., scaled version returned coda.samples()) kept? (MCMC sample re-scaled scale data always kept.) modelname character string specifying name model file (including ending, either .R .txt). unspecified random name generated. modeldir directory containing model file directory model file written. unspecified temporary directory created. overwrite logical; whether existing model file specified <modeldir>/<modelname> overwritten. set FALSE model already exists, model used. unspecified (NULL) file exists, user asked input proceed. keep_model logical; whether created JAGS model file saved removed (FALSE; default) sampling finished.","code":""},{"path":"/reference/remiod.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Reference-Based Multiple Imputation for Ordinal/Binary Response — remiod","text":"list includes (1) Information JAGS modeling MCMC samples (2) data.frame original data (include = TRUE) imputed datasets stacked onto .variable Imputation_ indexes imputation, .rownr links rows rows original data. cross-sectional datasets variable .id added subject identifier.","code":""},{"path":"/reference/remiod.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Reference-Based Multiple Imputation for Ordinal/Binary Response — remiod","text":"","code":"# \\donttest{ # data(schizow)  test = remiod(formula = y6 ~ tx + y0 + y1 + y3, data = schizow,               trtvar = 'tx', algorithm = 'jags', method=\"MAR\",               ord_cov_dummy = FALSE, n.adapt = 10, n.chains = 1,               n.iter = 10, thin = 2, warn = FALSE, seed = 1234) #> NOTE: Stopping adaptation #>  #>  # }"},{"path":"/reference/schizo.html","id":null,"dir":"Reference","previous_headings":"","what":"National Institute of Mental Health shizophrenia study — schizo","title":"National Institute of Mental Health shizophrenia study — schizo","text":"Schizophrenia data randomized controlled trial   patients assigned either drug placebo group. \"Severity   Illness\" measured, weeks 0, 1, ..., 6, four category   ordered scale. observations made weeks 0, 1, 3,   6.","code":""},{"path":"/reference/schizo.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"National Institute of Mental Health shizophrenia study — schizo","text":"","code":"data(schizo)"},{"path":"/reference/schizo.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"National Institute of Mental Health shizophrenia study — schizo","text":"data frame 1603 observations 437 subjects. Five vectors   contain information id patient ID. imps79 original response measurements numerical       scale. imps79b binary response based cut-value       3.5 measurements numerical scale: 0 = normal       mildly ill 1 = moderately extremely ill imps79o ordinal response 4 category scale,       \"normal borderline mentally ill\" < \"mildly moderately ill\",       \"markedly ill\", \"severely among extremely ill\". tx treatment indicator: 1 drug, 0 placebo. week week.","code":""},{"path":"/reference/schizo.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"National Institute of Mental Health shizophrenia study — schizo","text":"documentation file copied mixcat package   slightly modified.","code":""},{"path":"/reference/schizo.html","id":"source","dir":"Reference","previous_headings":"","what":"Source","title":"National Institute of Mental Health shizophrenia study — schizo","text":"https://hedeker.people.uic.edu/ml.html","code":""},{"path":"/reference/schizo.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"National Institute of Mental Health shizophrenia study — schizo","text":"Hedeker, D. R. Gibbons (2006). Longitudinal Data   Analysis. New Jersey, USA: John Wiley & Sons.","code":""},{"path":"/reference/schizob.html","id":null,"dir":"Reference","previous_headings":"","what":"wide format of binary response of Schizophrenia data. — schizob","title":"wide format of binary response of Schizophrenia data. — schizob","text":"dataset containing treatment binary responses measured baseline 3 post-baseline visits","code":""},{"path":"/reference/schizob.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"wide format of binary response of Schizophrenia data. — schizob","text":"","code":"schizob"},{"path":"/reference/schizob.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"wide format of binary response of Schizophrenia data. — schizob","text":"data frame 437 rows 5 variables: tx treatment, 1 treated 0 placebo y0 binary response baseline y1, y3, y6 binary response post-baseline week 1, 3, 6.","code":""},{"path":"/reference/schizob.html","id":"source","dir":"Reference","previous_headings":"","what":"Source","title":"wide format of binary response of Schizophrenia data. — schizob","text":"long--wise tranformation schizo data, .e. schizob = reshape2::dcast(schizo, id + tx ~ week, value.var = \"imps79b\")","code":""},{"path":"/reference/schizow.html","id":null,"dir":"Reference","previous_headings":"","what":"wide format of ordinal response of Schizophrenia data. — schizow","title":"wide format of ordinal response of Schizophrenia data. — schizow","text":"dataset containing treatment ordinal responses measured baseline 3 post-baseline visits","code":""},{"path":"/reference/schizow.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"wide format of ordinal response of Schizophrenia data. — schizow","text":"","code":"schizow"},{"path":"/reference/schizow.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"wide format of ordinal response of Schizophrenia data. — schizow","text":"data frame 437 rows 5 variables: tx treatment, 1 treated 0 placebo y0 ordinal response baseline y1, y3, y6 ordinal response post-baseline week 1, 3, 6.","code":""},{"path":"/reference/schizow.html","id":"source","dir":"Reference","previous_headings":"","what":"Source","title":"wide format of ordinal response of Schizophrenia data. — schizow","text":"long--wise tranformation schizo data, .e. schizow = reshape2::dcast(schizo, id + tx ~ week, value.var = \"imps79o\")","code":""},{"path":"/reference/summary.html","id":null,"dir":"Reference","previous_headings":"","what":"Summarize the results from an object of class remiod — summary","title":"Summarize the results from an object of class remiod — summary","text":"Obtain print summary, (fixed effects) coefficients (coef) credible interval (confint).","code":""},{"path":"/reference/summary.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Summarize the results from an object of class remiod — summary","text":"","code":"summary(object, ...)  # S3 method for remiod summary(object, start = NULL, end = NULL, thin = NULL,   quantiles = c(0.025, 0.975), exclude_chains = NULL, outcome = NULL,   warn = TRUE, mess = TRUE, ...)  # S3 method for summary.remiod print(x, digits = 3, ...)  # S3 method for summary.remiod coef(object, start = NULL, end = NULL,   thin = NULL, subset = NULL, exclude_chains = NULL, warn = TRUE,   mess = TRUE, ...)"},{"path":"/reference/summary.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Summarize the results from an object of class remiod — summary","text":"object object inheriting class 'remoid' ... additional, optional arguments trunc named list specifying limits truncation distribution named incomplete variables (see vignette ModelSpecification) hyperpars list hyper-parameters, obtained default_hyperpars() scale_vars named vector (continuous) variables centred scaled (mean = 0 sd = 1) enter linear predictor improve convergence MCMC sampling. Default numeric variables integer variables >20 different values scaled. set FALSE scaling done. custom named list JAGS model chunks (character strings) replace model given variable. append_data_list list appended list containing data passed rjags (data_list). may necessary additional data / variables needed custom (covariate) models. progress.bar character string specifying type progress bar. Possible values \"text\" (default), \"gui\", \"none\" (see update). Note: sampling performed parallel possible display progress bar. quiet logical; TRUE messages generated rjags compilation well progress bar adaptive phase suppressed, (see jags.model) keep_scaled_mcmc \"original\" MCMC sample (.e., scaled version returned coda.samples()) kept? (MCMC sample re-scaled scale data always kept.) modelname character string specifying name model file (including ending, either .R .txt). unspecified random name generated. modeldir directory containing model file directory model file written. unspecified temporary directory created. overwrite logical; whether existing model file specified <modeldir>/<modelname> overwritten. set FALSE model already exists, model used. unspecified (NULL) file exists, user asked input proceed. keep_model logical; whether created JAGS model file saved removed (FALSE; default) sampling finished. start first iteration interest (see window.mcmc) end last iteration interest (see window.mcmc) thin thinning interval (integer; see window.mcmc). example, thin = 1 (default) keep MCMC samples iterations; thin = 5 keep every 5th iteration. quantiles posterior quantiles exclude_chains optional vector index numbers chains excluded outcome specify outcome variable pick imputation model warn logical; warnings given? Default TRUE. mess logical; messages given? Default TRUE. x object class summary.remiod digits minimum number significant digits printed values. subset subset parameters/variables/nodes (columns MCMC sample). Follows principle argument monitor_params *_imp.","code":""},{"path":"/reference/tang_MI_RB.html","id":null,"dir":"Reference","previous_headings":"","what":"Implement controlled multiple imputation algorithms proposed by Tang — tang_MI_RB","title":"Implement controlled multiple imputation algorithms proposed by Tang — tang_MI_RB","text":"Internal function, creates multiple imputed datasets based assigned imputation method algorithm Tang's sequential modeling.","code":""},{"path":"/reference/tang_MI_RB.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Implement controlled multiple imputation algorithms proposed by Tang — tang_MI_RB","text":"","code":"tang_MI_RB(object, dtimp, treatment, method = \"MAR\", delta = 0,   ord_cov_dummy = FALSE, exclude_chains = NULL, include = FALSE)"},{"path":"/reference/tang_MI_RB.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Implement controlled multiple imputation algorithms proposed by Tang — tang_MI_RB","text":"object object inheriting class 'remoid' dtimp imputed complete data sets remiod function. treatment treatment variable. method method obtaining multiple-imputed dataset. Options include MAR, J2R, CR, delta adjustment. Default MAR. delta specific value used Delta adjustment, applicable method=\"delta\". ord_cov_dummy optional. specify whether ordinal variables treated categorical variables continuous variables included covariates sequential imputation models. Default TRUE, dummy variables created accordingly. exclude_chains optional vector index numbers chains excluded include logical, TRUE, raw data included imputed data sets imputation ID = 0.","code":""},{"path":"/reference/tang_MI_RB.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Implement controlled multiple imputation algorithms proposed by Tang — tang_MI_RB","text":"multiple imputed datasets stacked onto (.e., long format; optionally including original incomplete data).variable Imputation_ indexes imputation, .rownr links rows rows original data. cross-sectional datasets variable .id added subject identifier.","code":""},{"path":"/reference/updateMI.html","id":null,"dir":"Reference","previous_headings":"","what":"Apply a MI method following initial run of remoid function — updateMI","title":"Apply a MI method following initial run of remoid function — updateMI","text":"Apply MI method following initial run remoid function","code":""},{"path":"/reference/updateMI.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Apply a MI method following initial run of remoid function — updateMI","text":"","code":"updateMI(object, method = c(\"MAR\", \"J2R\", \"CR\", \"delta\"), delta = 0,   mi.setting = NULL, mess = TRUE)"},{"path":"/reference/updateMI.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Apply a MI method following initial run of remoid function — updateMI","text":"object object inheriting class remoid. method method obtaining multiple-imputed dataset. Options include MAR, J2R, CR, delta adjustment. Default MAR. delta specific value used Delta adjustment, applicable method=\"delta\". mi.setting list arguments extracting MI data set, used update one remoid object. Default NULL, meaning update mi.setting remoid object. mess logical; messages given? Default TRUE.","code":""}]
